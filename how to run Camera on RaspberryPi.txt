Configuration of OpenCVSharp:


Przed:

sudo apt-get install libgtk2.0-dev pkg-config



https://github.com/shimat/opencvsharp/issues/388#issuecomment-338617593

I have taken the following notes while performing the procedure. Use it at your own risk. I tested it on RPI Stretch

OpenCV Installation

sudo apt-get install -y build-essential cmake apt-transport-https
sudo apt-get install -y zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev libtbb-dev libeigen3-dev
sudo apt-get install -y wget unzip curl nano git

cd ~
mkdir src
cd src
mkdir opencv
cd opencv
wget https://github.com/opencv/opencv/archive/3.2.0.zip
unzip  3.2.0.zip
rm 3.2.0.zip

wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip
unzip 3.2.0.zip
rm 3.2.0.zip
cd opencv-3.2.0/

#Build and install OpenCv
mkdir build
cd build
cmake -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.5.0/modules -D WITH_LIBV4L=ON -D CMAKE_BUILD_TYPE=RELEASE -D WITH_TBB=ON -D ENABLE_NEON=ON -D WITH_GTK=ON ..
# LIBV4L - Enabled Video 4 Linux | TBB - Multithreading | NEON - ARM Optimizations
make
sudo make install
sudo ldconfig
OpenCVSharp Installation

#download OpenCvSharp
cd ~/src
git clone https://github.com/shimat/opencvsharp.git

#install the Extern lib.
cd opencvsharp/src
sed -i.bak '5i\
include_directories("/usr/local/include/")\
set (CMAKE_CXX_STANDARD 11)\
' CMakeLists.txt
mkdir build
cd build
cmake ..
make
sudo make install
sudo ldconfig



Pozniej: 
dotnet publish -r linux-arm -o ..\build -p:PublishSingleFile=true
sudo chmod +x CameraTestRPi1
sudo ./CameraTestRPi1


Jetson Nano:

https://github.com/shimat/opencvsharp/issues/701

cd opencv
mkdir release
cd release
# Poprzedni, CUDA nie dziala
cmake -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.5.0/modules \
-D WITH_TBB=ON \
-D ENABLE_NEON=ON \
-D WITH_GTK=ON \
-D WITH_CUDA=ON \
-D CUDA_ARCH_BIN="5.3,6.2,7.2" \
-D CUDA_ARCH_PTX="" \
-D WITH_GSTREAMER=ON \
-D WITH_LIBV4L=ON \
-D WITH_FFMPEG=ON \
-D BUILD_TESTS=OFF \
-D BUILD_PERF_TESTS=OFF \
-D BUILD_EXAMPLES=OFF \
-D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local ..

# CUDA z DNN nie dziala
cmake -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.5.0/modules \
-D WITH_TBB=ON \
-D ENABLE_NEON=ON \
-D WITH_GTK=ON \
-D WITH_CUDA=ON \
-D CUDA_ARCH_BIN="5.3" \
-D CUDA_ARCH_PTX="" \
-D OPENCV_DNN_CUDA=ON \
-D WITH_GSTREAMER=ON \
-D WITH_LIBV4L=ON \
-D WITH_FFMPEG=ON \
-D BUILD_TESTS=OFF \
-D BUILD_PERF_TESTS=OFF \
-D BUILD_EXAMPLES=OFF \
-D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local ..

# https://github.com/opencv/opencv/issues/16439#issuecomment-634815501
# to trzeba sprobowac jutro:
cmake \
 -D CMAKE_BUILD_TYPE=RELEASE \
 -D CMAKE_INSTALL_PREFIX=/usr/local \
 -D INSTALL_PYTHON_EXAMPLES=ON \
 -D WITH_CUDA=ON \
 -D WITH_CUDNN=ON \
 -D OPENCV_DNN_CUDA=ON \
 -D ENABLE_FAST_MATH=ON \
 -D CUDA_FAST_MATH=ON \
 -D CUDA_ARCH_PTX="" \
 -D CUDA_ARCH_BIN="5.3,6.2,7.2" \
 -D WITH_CUBLAS=ON \
 -D WITH_LIBV4L=ON \
 -D WITH_V4L=ON \
 -D WITH_QT=OFF \
 -D WITH_OPENGL=ON \
 -D BUILD_opencv_python3=ON \
 -D BUILD_opencv_python2=OFF \
 -D BUILD_opencv_java=OFF \
 -D WITH_FFMPEG=ON \
 -D WITH_GSTREAMER=ON \
 -D OPENCV_GENERATE_PKGCONFIG=ON \
 -D WITH_TBB=ON \
 -D BUILD_TBB=ON \
 -D WITH_GTK=ON \
 -D BUILD_TESTS=OFF \
 -D BUILD_PERF_TESTS=OFF \
 -D BUILD_EXAMPLES=ON \
 -D OPENCV_ENABLE_NONFREE=ON \
 -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules ..

make -j4
make install


ZOBACZYC https://gist.github.com/YashasSamaga/6d37bc403c0934329b078b4bad98c7f2
TRY CUDA 10.2
